{"version":3,"sources":["components/task/task_form/task_form.jsx","api_utils/task_api_util.js","actions/task_action.js","components/task/task_form/task_form_edit_container.js","components/task/task_display/task_info.jsx","components/task/task_display/task_display.jsx","components/task/task_display/task_display_container.js","components/task/task_form/task_form_create_container.js","components/task/task_list/task_list.jsx","components/task/task_list/task_list_container.js","components/kanban_board.jsx","components/kanban_board_container.js","App.js","serviceWorker.js","reducers/backlog_reducer.js","reducers/priority_reducer.js","reducers/in_progress_reducer.js","reducers/completed_reducer.js","reducers/entities_reducer.js","reducers/root_reducer.js","index.js","store/store.js"],"names":["TaskForm","props","state","task","field","e","setState","target","value","preventDefault","formAction","hideForm","formType","this","title","notes","dueDate","className","class","onClick","onSubmit","handleSubmit","type","onChange","handleUpdate","placeholder","required","React","Component","STATUSES","saveTasks","tasks","localStorage","setItem","JSON","stringify","fetchTasks","savedTasks","getItem","parse","backlog","priority","inProgress","completed","receiveTaskTypes","removeTaskTypes","receiveTasks","receiveTask","status","createTask","id","uniqid","newTask","Object","assign","TaskApiUtil","updateTask","deleteTask","removeTask","changeStatus","dir","change","indexOf","connect","_","dispatch","TaskInfo","showForm","editFormButton","moveUpButton","moveDownButton","deleteButton","showMoveUpButton","showMoveDownButton","length","Date","toLocaleDateString","year","month","day","createDate","TaskDisplay","formDisplayState","editForm","changeFormState","taskInfo","display","completionDate","TaskList","listType","taskDisplayList","map","idx","key","taskForm","taskFormButton","taskFormDisplay","entities","values","KanbanBoard","App","Boolean","window","location","hostname","match","backlogReducer","newState","oldState","action","freeze","priorityReducer","inProgressReducer","completedReducer","entitiesReducers","combineReducers","rootReducer","entitiesReducer","store","preloadedState","middleware","createStore","applyMiddleware","configureStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.97ba96c7.chunk.js","sourcesContent":["import React from 'react';\n\nclass TaskForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = props.task;\n  }\n\n  handleUpdate(field) {\n    return e => {\n      this.setState({[field]: e.target.value});\n    };\n  }\n\n  handleSubmit() {\n    return e => {\n      e.preventDefault();\n      this.props.formAction(this.state);\n      this.props.hideForm();\n    };\n  }\n\n  render() {\n    const { formType } = this.props;\n    const { title, notes, dueDate } = this.state;\n    return (\n      <article className=\"task-form\">\n        <div className=\"task-form-header\">\n          <h3>{formType} a Task</h3>\n          <i \n            class=\"far fa-times-circle\"\n            onClick={this.props.hideForm}\n          ></i>\n        </div>\n        <form onSubmit={this.handleSubmit()}>\n          <label>\n            Task\n            <input\n              type=\"text\"\n              value={title}\n              onChange={this.handleUpdate(\"title\")}\n              placeholder=\"Task\"\n              required\n            />\n          </label>\n          <label>\n            Notes\n            <input\n              type=\"text\"\n              value={notes}\n              placeholder=\"Notes\"\n              onChange={this.handleUpdate(\"notes\")}\n            />\n          </label>\n          <label>\n            Due Date\n            <input\n              type=\"date\"\n              value={dueDate}\n              onChange={this.handleUpdate(\"dueDate\")}\n            />\n          </label>\n          <button type=\"submit\">{formType}</button>\n        </form>\n      </article>\n    );\n  } \n}\n\nexport default TaskForm;","import uniqid from \"uniqid\";\n\nconst STATUSES = [\"backlog\", \"priority\", \"inProgress\", \"completed\"];\n\nconst saveTasks = tasks => {\n  localStorage.setItem(\"kanban_board\", JSON.stringify(tasks));\n};\n\nexport const fetchTasks = () => {\n  const savedTasks = localStorage.getItem(\"kanban_board\");\n  const taskTemplate = {\n    backlog: {},\n    priority: {},\n    inProgress: {},\n    completed: {}\n  };\n  return savedTasks ? JSON.parse(savedTasks) : taskTemplate;\n};\n\nexport const createTask = task => {\n  const tasks = fetchTasks();\n  task.id = uniqid();\n  const newTask = {[task.id]: task};\n  tasks[task.status] = Object.assign({}, tasks[task.status], {[task.id]: task} );\n  saveTasks(tasks);\n  return newTask;\n};\n\nexport const updateTask = task => {\n  const tasks = fetchTasks();\n  const newTask = { [task.id]: task };\n  tasks[task.status] = Object.assign({}, tasks[task.status], newTask);\n  saveTasks(tasks);\n  return newTask;\n};\n\nexport const deleteTask = task => {\n  const tasks = fetchTasks();\n  delete tasks[task.status][task.id];\n  saveTasks(tasks);\n};\n\nexport const changeStatus = (task, dir) => {\n  const change = dir === \"up\" ? 1 : -1;\n  const tasks = fetchTasks();\n  delete tasks[task.status][task.id];\n  task.status = STATUSES[STATUSES.indexOf(task.status) + change];\n  tasks[task.status][task.id] = task;\n  saveTasks(tasks);\n  return tasks;\n};","import * as TaskApiUtil from \"../api_utils/task_api_util\";\n\nexport const RECEIVE_TASKS = \"RECEIVE_TASKS\";\nexport const RECEIVE_BACKLOG_TASK = \"RECEIVE_BACKLOG_TASK\";\nexport const REMOVE_BACKLOG_TASK = \"REMOVE_BACKLOG_TASK\";\nexport const RECEIVE_PRIORITY_TASK = \"RECEIVE_PRIORITY_TASK\";\nexport const REMOVE_PRIORITY_TASK = \"REMOVE_PRIORITY_TASK\";\nexport const RECEIVE_IN_PROGRESS_TASK = \"RECEIVE_IN_PROGRESS_TASK\";\nexport const REMOVE_IN_PROGRESS_TASK = \"REMOVE_IN_PROGRESS_TASK\";\nexport const RECEIVE_COMPLETED_TASK = \"RECEIVE_COMPLETED_TASK\";\nexport const REMOVE_COMPLETED_TASK = \"REMOVE_COMPLETED_TASK\";\n\nconst receiveTaskTypes = {\n  backlog: RECEIVE_BACKLOG_TASK,\n  priority: RECEIVE_PRIORITY_TASK,\n  inProgress: RECEIVE_IN_PROGRESS_TASK,\n  completed: RECEIVE_COMPLETED_TASK\n};\nconst removeTaskTypes = {\n  backlog: REMOVE_BACKLOG_TASK,\n  priority: REMOVE_PRIORITY_TASK,\n  inProgress: REMOVE_IN_PROGRESS_TASK,\n  completed: REMOVE_COMPLETED_TASK\n};\n\nconst receiveTasks = tasks => {\n  return {\n    type: RECEIVE_TASKS,\n    tasks\n  };\n};\n\nconst receiveTask = task => {\n  const type = receiveTaskTypes[task.status];\n  return {\n    type,\n    task\n  };\n};\n\nconst removeTask = task => {\n  const type = removeTaskTypes[task.status];\n  return {\n    type,\n    task\n  };\n};\n\nexport const fetchTasks = () => {\n  const tasks = TaskApiUtil.fetchTasks();\n  return receiveTasks(tasks);\n};\n\nexport const createTask = task => {\n  TaskApiUtil.createTask(task);\n  return receiveTask(task);\n};\n\nexport const updateTask = task => {\n  TaskApiUtil.updateTask(task);\n  return receiveTask(task);\n};\n\nexport const deleteTask = task => {\n  TaskApiUtil.deleteTask(task);\n  return removeTask(task);\n};\n\nexport const changeStatus = (task, dir) => {\n  const tasks = TaskApiUtil.changeStatus(task, dir);\n  return receiveTasks(tasks);\n};","import { connect } from \"react-redux\";\nimport TaskForm from \"./task_form\";\nimport { updateTask } from \"../../../actions/task_action\";\n\nconst mapStateToProps = (_, { task }) => {\n  return {\n    formType: \"Edit\",\n    task\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    formAction: task => dispatch(updateTask(task))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskForm);\n","import React from 'react';\n\nconst TaskInfo = ({ props: { task, deleteTask, changeStatus }, showForm}) => {\n  const editFormButton = <i className=\"fas fa-edit\" onClick={showForm} title=\"Edit Task\"></i>;\n  const moveUpButton = <i className=\"fas fa-arrow-alt-circle-right\" onClick={() => changeStatus(task, \"up\")}></i>;\n  const moveDownButton = <i className=\"fas fa-arrow-alt-circle-left\" onClick={() => changeStatus(task, \"down\")}></i>;\n  const deleteButton = <i className=\"fas fa-trash-alt\" onClick={deleteTask} title=\"Delete Task\"></i>;\n  const showMoveUpButton = task.status === \"completed\" ? \"\" : moveUpButton;\n  const showMoveDownButton = task.status === \"backlog\" ? \"\" : moveDownButton;\n  const dueDate = task.dueDate.length ? new Date(task.dueDate).toLocaleDateString(\"en-US\", { year: 'numeric', month: '2-digit', day: '2-digit' }) : \"\";\n  return (\n    <ul>\n      <li>Task: {task.title}</li>\n      <li>Notes: {task.notes}</li>\n      <li>Created: {task.createDate}</li>\n      <li>Due: {dueDate}</li>\n      <li className=\"task-buttons\">\n        {editFormButton}\n        {deleteButton}\n        {showMoveDownButton}\n        {showMoveUpButton}\n      </li>\n    </ul>\n  );\n};\n\nexport default TaskInfo;","import React from 'react';\nimport TaskFormEditContainer from '../task_form/task_form_edit_container';\nimport TaskInfo from './task_info';\n\nclass TaskDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      formDisplayState: false\n    };\n  }\n\n  changeFormState() {\n    return () => {\n      this.setState({ formDisplayState: !this.state.formDisplayState });\n    };\n  }\n\n  render() {\n    const editForm = <TaskFormEditContainer task={this.props.task} hideForm={this.changeFormState()}/>;\n    const taskInfo = <TaskInfo props={this.props} showForm={this.changeFormState()}/>;\n    const display = this.state.formDisplayState ? editForm : taskInfo;\n\n    return (\n      <>\n        {display}\n      </>\n    );\n  }\n}\n\nexport default TaskDisplay;","import { connect } from \"react-redux\";\nimport TaskDisplay from \"./task_display\";\nimport { changeStatus } from \"../../../actions/task_action\";\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    changeStatus: (task, dir) => dispatch(changeStatus(task, dir))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(TaskDisplay);\n","import { connect } from \"react-redux\";\nimport TaskForm from \"./task_form\";\nimport { createTask } from \"../../../actions/task_action\";\n\nconst mapStateToProps = (_, { status }) => {\n  return {\n    formType: \"Create\",\n    task: {\n      id: null,\n      title: \"\",\n      status,\n      dueDate: \"\",\n      completionDate: \"\",\n      createDate: new Date().toLocaleDateString(\"en-US\", {year: 'numeric', month: '2-digit', day: '2-digit'}),\n      notes: \"\"\n    }\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    formAction: task => dispatch(createTask(task))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskForm);\n","import React from 'react';\nimport TaskDisplayContainer from '../task_display/task_display_container';\nimport TaskFormCreateContainer from '../task_form/task_form_create_container';\n\nclass TaskList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      formDisplayState: false\n    };\n  }\n\n  changeFormState() {\n    return () => {\n      this.setState({ formDisplayState: !this.state.formDisplayState });\n    };\n  }\n\n  render() {\n    const { tasks, deleteTask, listType } = this.props;\n    const taskDisplayList = tasks.map((task, idx) => \n      <TaskDisplayContainer\n        key={idx}\n        task={task}\n        deleteTask={() => deleteTask(task)}\n      />\n    );\n\n    const taskForm = <TaskFormCreateContainer status={listType} hideForm={this.changeFormState()}/>;\n    const taskFormButton = <button onClick={this.changeFormState()}>Add Task</button>;\n    const taskFormDisplay = this.state.formDisplayState ? taskForm : taskFormButton;\n\n    return (\n      <article className=\"task-list\">\n        <div className=\"task-list-items\">\n          {taskDisplayList}\n        </div>\n        {taskFormDisplay}\n      </article>\n    );\n  }\n}\n\nexport default TaskList;","import { connect } from 'react-redux';\nimport TaskList from './task_list';\nimport { deleteTask } from \"../../../actions/task_action\";\n\nconst mapStateToProps = ({ entities }, { listType }) => {\n  const tasks = Object.values(entities[listType]);\n  return {\n    listType,\n    tasks\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    deleteTask: task => dispatch(deleteTask(task))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskList);","import React from 'react';\nimport TaskListContainer from '../components/task/task_list/task_list_container';\n\nclass KanbanBoard extends React.Component {\n  componentDidMount() {\n    this.props.fetchTasks();\n  }\n\n  render() {\n    return (\n      <main className=\"kanban-board\">\n        <section className=\"kanban-board-header\">\n          <h2>BACKLOG</h2>\n          <h2>PRIORITY</h2>\n          <h2>IN PROGRESS</h2>\n          <h2>COMPLETED</h2>\n        </section>\n        <section className=\"kanban-board-lists\">\n          <TaskListContainer listType={\"backlog\"}/>\n          <TaskListContainer listType={\"priority\"}/>\n          <TaskListContainer listType={\"inProgress\"}/>\n          <TaskListContainer listType={\"completed\"}/>\n        </section>\n      </main>\n    )\n  }\n}\n\nexport default KanbanBoard;","import { connect } from \"react-redux\";\nimport KanbanBoard from './kanban_board';\nimport { fetchTasks } from '../actions/task_action';\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchTasks: () => dispatch(fetchTasks())\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(KanbanBoard);\n","import React from 'react';\nimport KanbanBoardContainer from './components/kanban_board_container';\n\nfunction App() {\n  return (\n    <KanbanBoardContainer />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { RECEIVE_TASKS, RECEIVE_BACKLOG_TASK, REMOVE_BACKLOG_TASK } from \"../actions/task_action\";\n\nconst backlogReducer = (oldState = {}, action) => {\n  Object.freeze(oldState);\n  let newState;\n  switch (action.type) {\n    case RECEIVE_TASKS:\n      return action.tasks.backlog;\n    case RECEIVE_BACKLOG_TASK:\n      newState = Object.assign({}, oldState, { [action.task.id]: action.task });\n      return newState;\n    case REMOVE_BACKLOG_TASK:\n      newState = Object.assign({}, oldState);\n      delete newState[action.task.id];\n      return newState;\n    default:\n      return oldState;\n  }\n};\n\nexport default backlogReducer;","import { RECEIVE_TASKS, RECEIVE_PRIORITY_TASK, REMOVE_PRIORITY_TASK } from \"../actions/task_action\";\n\nconst priorityReducer = (oldState = {}, action) => {\n  Object.freeze(oldState);\n  let newState;\n  switch (action.type) {\n    case RECEIVE_TASKS:\n      return action.tasks.priority;\n    case RECEIVE_PRIORITY_TASK:\n      newState = Object.assign({}, oldState, { [action.task.id]: action.task });\n      return newState;\n    case REMOVE_PRIORITY_TASK:\n      newState = Object.assign({}, oldState);\n      delete newState[action.task.id];\n      return newState;\n    default:\n      return oldState;\n  }\n};\n\nexport default priorityReducer;","import { RECEIVE_TASKS, RECEIVE_IN_PROGRESS_TASK, REMOVE_IN_PROGRESS_TASK } from \"../actions/task_action\";\n\nconst inProgressReducer = (oldState = {}, action) => {\n  Object.freeze(oldState);\n  let newState;\n  switch (action.type) {\n    case RECEIVE_TASKS:\n      return action.tasks.inProgress;\n    case RECEIVE_IN_PROGRESS_TASK:\n      newState = Object.assign({}, oldState, { [action.task.id]: action.task });\n      return newState;\n    case REMOVE_IN_PROGRESS_TASK:\n      newState = Object.assign({}, oldState);\n      delete newState[action.task.id];\n      return newState;\n    default:\n      return oldState;\n  }\n};\n\nexport default inProgressReducer;","import { RECEIVE_TASKS, RECEIVE_COMPLETED_TASK, REMOVE_COMPLETED_TASK } from \"../actions/task_action\";\n\nconst completedReducer = (oldState = {}, action) => {\n  Object.freeze(oldState);\n  let newState;\n  switch (action.type) {\n    case RECEIVE_TASKS:\n      return action.tasks.completed;\n    case RECEIVE_COMPLETED_TASK:\n      newState = Object.assign({}, oldState, { [action.task.id]: action.task });\n      return newState;\n    case REMOVE_COMPLETED_TASK:\n      newState = Object.assign({}, oldState);\n      delete newState[action.task.id];\n      return newState;\n    default:\n      return oldState;\n  }\n};\n\nexport default completedReducer;","import backlogReducer from \"./backlog_reducer\";\nimport priorityReducer from \"./priority_reducer\";\nimport inProgressReducer from \"./in_progress_reducer\";\nimport completedReducer from \"./completed_reducer\";\nimport { combineReducers } from \"redux\";\n\nconst entitiesReducers = combineReducers({\n  backlog: backlogReducer,\n  priority: priorityReducer,\n  inProgress: inProgressReducer,\n  completed: completedReducer\n});\n\nexport default entitiesReducers;\n","import { combineReducers } from \"redux\";\nimport entitiesReducer from \"./entities_reducer\";\n\nconst rootReducer = combineReducers({\n  entities: entitiesReducer,\n});\n\nexport default rootReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./stylesheets/index.scss\";\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\nimport configureStore from \"./store/store\";\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, \n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, applyMiddleware } from \"redux\";\nimport logger from \"redux-logger\";\nimport rootReducer from \"../reducers/root_reducer\";\n\nconst configureStore = (preloadedState = {}) => {\n  let middleware = [];\n  if (process.env.NODE_ENV !== \"production\") {\n    middleware = [...middleware, logger];\n  }\n  return createStore(\n    rootReducer,\n    preloadedState,\n    applyMiddleware(...middleware)\n  );\n};\n\nexport default configureStore;\n"],"sourceRoot":""}